{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","scriptjs","dateMath","GoogleStackdriverDatasource","instanceSettings","$q","templateSrv","timeSrv","type","name","clientId","jsonData","defaultProjectId","scopes","join","discoveryDocs","initialized","q","options","initialize","then","Promise","all","targets","map","performTimeSeriesQuery","target","response","timeSeries","forEach","series","flatten","responses","filter","data","aliasPattern","alias","metricLabel","getMetricLabel","datapoints","valueKey","valueType","toLowerCase","points","point","push","value","Date","parse","interval","endTime","valueOf","err","JSON","body","console","log","error","query","metricsQuery","match","projectId","params","performMetricDescriptorsQuery","when","metricDescriptors","text","d","labelQuery","targetProperty","view","range","timeRange","valuePicker","property","groupsQuery","performGroupsQuery","group","split","groupMembersQuery","groupId","performGroupsMembersQuery","members","load","gapi","client","init","scope","status","message","title","deferred","defer","resolve","promise","auth2","getAuthInstance","currentUser","get","authInstance","isSignedIn","signIn","user","angular","copy","replace","scopedVars","aggregation","Object","keys","key","isArray","pageToken","convertTime","from","to","monitoring","projects","list","nextPageToken","concat","nextResponse","groups","aliasRegex","aliasData","metric","resource","label","g1","matchedValue","date","roundUp","isString","toISOString"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport scriptjs from './libs/script.js';\nimport dateMath from 'app/core/utils/datemath';\n\nexport class GoogleStackdriverDatasource {\n  constructor(instanceSettings, $q, templateSrv, timeSrv) {\n    this.type = instanceSettings.type;\n    this.name = instanceSettings.name;\n    this.clientId = instanceSettings.jsonData.clientId;\n    this.defaultProjectId = instanceSettings.jsonData.defaultProjectId;\n    this.scopes = [\n      //'https://www.googleapis.com/auth/cloud-platform',\n      //'https://www.googleapis.com/auth/monitoring',\n      'https://www.googleapis.com/auth/monitoring.read'\n    ].join(' ');\n    this.discoveryDocs = [ \"https://monitoring.googleapis.com/$discovery/rest?version=v3\" ];\n    this.initialized = false;\n    this.q = $q;\n    this.templateSrv = templateSrv;\n    this.timeSrv = timeSrv;\n  }\n\n  query(options) {\n    return this.initialize().then(() => {\n      return Promise.all(options.targets.map(target => {\n        return this.performTimeSeriesQuery(target, options).then(response => {\n          response.timeSeries.forEach(series => {\n            series.target = target;\n          });\n          return response;\n        });\n      })).then(responses => {\n        let timeSeries = _.flatten(responses.filter(response => {\n          return !!response.timeSeries;\n        }).map(response => {\n          return response.timeSeries;\n        }));\n        return {\n          data: timeSeries.map(series => {\n            let aliasPattern = '{{resource.type}} - {{metric.type}}';\n            if (series.target.alias) {\n              aliasPattern = series.target.alias;\n            }\n            let metricLabel = this.getMetricLabel(aliasPattern, series);\n\n            let datapoints = [];\n            let valueKey = series.valueType.toLowerCase() + 'Value';\n            for (let point of series.points) {\n              datapoints.push([point.value[valueKey], Date.parse(point.interval.endTime).valueOf()]);\n            }\n            return { target: metricLabel, datapoints: datapoints };\n          })\n        };\n      }, err => {\n        err = JSON.parse(err.body);\n        console.log(err);\n        throw err.error;\n      });\n    });\n  }\n\n  metricFindQuery(query) {\n    let metricsQuery = query.match(/^metrics\\((([^,]+), *)?(.*)\\)/);\n    if (metricsQuery) {\n      let projectId = metricsQuery[2] || this.defaultProjectId;\n      let filter = metricsQuery[3];\n      let params = {\n        projectId: projectId,\n        filter: filter\n      };\n      return this.performMetricDescriptorsQuery(params, {}).then(response => {\n        return this.q.when(response.metricDescriptors.map(d => {\n          return { text: d.type };\n        }));\n      });\n    }\n\n    let labelQuery = query.match(/^label_values\\((([^,]+), *)?([^,]+), *(.*)\\)/);\n    if (labelQuery) {\n      let projectId = labelQuery[2] || this.defaultProjectId;\n      let targetProperty = labelQuery[3];\n      let filter = labelQuery[4];\n      let params = {\n        projectId: projectId,\n        filter: filter,\n        view: 'HEADERS'\n      };\n      return this.performTimeSeriesQuery(params, { range: this.timeSrv.timeRange() }).then(response => {\n        let valuePicker = _.property(targetProperty);\n        return this.q.when(response.timeSeries.map(d => {\n          return { text: valuePicker(d) };\n        }));\n      });\n    }\n\n    let groupsQuery = query.match(/^groups\\(([^,]+)?\\)/);\n    if (groupsQuery) {\n      let projectId = groupsQuery[1] || this.defaultProjectId;\n      let params = {\n        projectId: projectId\n      };\n      return this.performGroupsQuery(params, {}).then(response => {\n        return this.q.when(response.group.map(d => {\n          return {\n            //text: d.displayName\n            text: d.name.split('/')[3]\n          };\n        }));\n      });\n    }\n\n    let groupMembersQuery = query.match(/^group_members\\((([^,]+), *)?([^,]+), *([^,]+), *(.*)\\)/);\n    if (groupMembersQuery) {\n      let projectId = groupMembersQuery[2] || this.defaultProjectId;\n      let groupId = groupMembersQuery[3];\n      let targetProperty = groupMembersQuery[4];\n      let filter = groupMembersQuery[5];\n      let params = {\n        projectId: projectId,\n        groupId: groupId,\n        filter: filter\n      };\n      return this.performGroupsMembersQuery(params, { range: this.timeSrv.timeRange() }).then(response => {\n        let valuePicker = _.property(targetProperty);\n        return this.q.when(response.members.map(d => {\n          return { text: valuePicker(d) };\n        }));\n      });\n    }\n\n    return this.q.when([]);\n  }\n\n  testDatasource() {\n    return this.load().then(() => {\n      return gapi.client.init({\n        clientId: this.clientId,\n        scope: this.scopes,\n        discoveryDocs: this.discoveryDocs\n      }).then(() => {\n        return { status: 'success', message: 'Data source is working', title: 'Success' };\n      });\n    });\n  }\n\n  load() {\n    let deferred = this.q.defer();\n    scriptjs('https://apis.google.com/js/api.js', () => {\n      gapi.load('client:auth2', () => {\n        return deferred.resolve();\n      });\n    });\n    return deferred.promise;\n  }\n\n  initialize() {\n    if (this.initialized) {\n      return Promise.resolve(gapi.auth2.getAuthInstance().currentUser.get());\n    }\n\n    return this.load().then(() => {\n      return gapi.client.init({\n        clientId: this.clientId,\n        scope: this.scopes,\n        discoveryDocs: this.discoveryDocs\n      }).then(() => {\n        let authInstance = gapi.auth2.getAuthInstance();\n        if (!authInstance) {\n          throw { message: 'failed to initialize' };\n        }\n        let isSignedIn = authInstance.isSignedIn.get();\n        if (isSignedIn) {\n          this.initialized = true;\n          return authInstance.currentUser.get();\n        }\n        return authInstance.signIn().then(user => {\n          this.initialized = true;\n          return user;\n        });\n      }, err => {\n        console.log(err);\n        throw { message: 'failed to initialize' };\n      });\n    });\n  }\n\n  performTimeSeriesQuery(target, options) {\n    target = angular.copy(target);\n    let params = {};\n    params.name = this.templateSrv.replace('projects/' + (target.projectId || this.defaultProjectId), options.scopedVars || {});\n    params.filter = this.templateSrv.replace(target.filter, options.scopedVars || {});\n    if (target.aggregation) {\n      for (let key of Object.keys(target.aggregation)) {\n        if (_.isArray(target.aggregation[key])) {\n          params['aggregation.' + key] = target.aggregation[key].map(aggregation => {\n            return this.templateSrv.replace(aggregation, options.scopedVars || {});\n          });\n        } else if (target.aggregation[key] !== '') {\n          params['aggregation.' + key] = this.templateSrv.replace(target.aggregation[key], options.scopedVars || {});\n        }\n      }\n    }\n    if (target.pageToken) {\n      params.pageToken = target.pageToken;\n    }\n    params['interval.startTime'] = this.convertTime(options.range.from, false);\n    params['interval.endTime'] = this.convertTime(options.range.to, true);\n    return gapi.client.monitoring.projects.timeSeries.list(params).then(response => {\n      response = JSON.parse(response.body);\n      if (!response) {\n        return {};\n      }\n      if (!response.nextPageToken) {\n        return response;\n      }\n      target.pageToken = response.nextPageToken;\n      return this.performTimeSeriesQuery(target, options).then(nextResponse => {\n        response = response.timeSeries.concat(nextResponse.timeSeries);\n        return response;\n      });\n    });\n  }\n\n  performMetricDescriptorsQuery(target, options) {\n    target = angular.copy(target);\n    let params = {};\n    params.name = this.templateSrv.replace('projects/' + (target.projectId || this.defaultProjectId), options.scopedVars || {});\n    params.filter = this.templateSrv.replace(target.filter, options.scopedVars || {});\n    if (target.pageToken) {\n      params.pageToken = target.pageToken;\n    }\n    return gapi.client.monitoring.projects.metricDescriptors.list(params).then(response => {\n      response = JSON.parse(response.body);\n      if (!response) {\n        return {};\n      }\n      if (!response.nextPageToken) {\n        return response;\n      }\n      target.pageToken = response.nextPageToken;\n      return this.performMetricDescriptorsQuery(target, options).then(nextResponse => {\n        response = response.metricDescriptors.concat(nextResponse.metricDescriptors);\n        return response;\n      });\n    });\n  }\n\n  performGroupsQuery(target, options) {\n    target = angular.copy(target);\n    let params = {};\n    params.name = this.templateSrv.replace('projects/' + (target.projectId || this.defaultProjectId), options.scopedVars || {});\n    if (target.pageToken) {\n      params.pageToken = target.pageToken;\n    }\n    return gapi.client.monitoring.projects.groups.list(params).then(response => {\n      response = JSON.parse(response.body);\n      if (!response) {\n        return {};\n      }\n      if (!response.nextPageToken) {\n        return response;\n      }\n      target.pageToken = response.nextPageToken;\n      return this.performGroupsQuery(target, options).then(nextResponse => {\n        response = response.group.concat(nextResponse.group);\n        return response;\n      });\n    });\n  }\n\n  performGroupsMembersQuery(target, options) {\n    target = angular.copy(target);\n    let params = {};\n    params.name = this.templateSrv.replace('projects/'\n     + (target.projectId || this.defaultProjectId)\n     + '/groups/'\n     + target.groupId, options.scopedVars || {});\n    params.filter = this.templateSrv.replace(target.filter, options.scopedVars || {});\n    if (target.pageToken) {\n      params.pageToken = target.pageToken;\n    }\n    params['interval.startTime'] = this.convertTime(options.range.from, false);\n    params['interval.endTime'] = this.convertTime(options.range.to, true);\n    return gapi.client.monitoring.projects.groups.members.list(params).then(response => {\n      response = JSON.parse(response.body);\n      if (!response) {\n        return {};\n      }\n      if (!response.nextPageToken) {\n        return response;\n      }\n      target.pageToken = response.nextPageToken;\n      return this.performGroupsMembersQuery(target, options).then(nextResponse => {\n        response = response.members.concat(nextResponse.members);\n        return response;\n      });\n    });\n  }\n\n  getMetricLabel(aliasPattern, series) {\n    let aliasRegex = /\\{\\{(.+?)\\}\\}/g;\n    let aliasData = {\n      metric: series.metric,\n      resource: series.resource\n    };\n    let label = aliasPattern.replace(aliasRegex, (match, g1) => {\n      let matchedValue = _.property(g1)(aliasData);\n      if (matchedValue) {\n        return matchedValue;\n      }\n      return g1;\n    });\n    return label;\n  }\n\n  convertTime(date, roundUp) {\n    if (_.isString(date)) {\n      date = dateMath.parse(date, roundUp);\n    }\n    return date.toISOString();\n  };\n}\n"]}